<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bishe.eq_active.mapper.Eq_activeMapper">
  <resultMap id="BaseResultMap" type="com.bishe.eq_active.model.Eq_active">
    <id column="ac_id" jdbcType="INTEGER" property="acId" />
    <result column="equipmrnt_id" jdbcType="INTEGER" property="equipmrntId" />
    <result column="day_date" jdbcType="DATE" property="dayDate" />
    <result column="distance" jdbcType="DOUBLE" property="distance" />
    <result column="cpu" jdbcType="VARCHAR" property="cpu" />
    <result column="power" jdbcType="VARCHAR" property="power" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ac_id, equipmrnt_id, day_date, distance, cpu, power
  </sql>
  <select id="selectByExample" parameterType="com.bishe.eq_active.model.Eq_activeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eq_active
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eq_active
    where ac_id = #{acId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eq_active
    where ac_id = #{acId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bishe.eq_active.model.Eq_activeExample">
    delete from eq_active
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bishe.eq_active.model.Eq_active">
    insert into eq_active (ac_id, equipmrnt_id, day_date, 
      distance, cpu, power
      )
    values (#{acId,jdbcType=INTEGER}, #{equipmrntId,jdbcType=INTEGER}, #{dayDate,jdbcType=DATE}, 
      #{distance,jdbcType=DOUBLE}, #{cpu,jdbcType=VARCHAR}, #{power,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bishe.eq_active.model.Eq_active">
    insert into eq_active
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="acId != null">
        ac_id,
      </if>
      <if test="equipmrntId != null">
        equipmrnt_id,
      </if>
      <if test="dayDate != null">
        day_date,
      </if>
      <if test="distance != null">
        distance,
      </if>
      <if test="cpu != null">
        cpu,
      </if>
      <if test="power != null">
        power,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="acId != null">
        #{acId,jdbcType=INTEGER},
      </if>
      <if test="equipmrntId != null">
        #{equipmrntId,jdbcType=INTEGER},
      </if>
      <if test="dayDate != null">
        #{dayDate,jdbcType=DATE},
      </if>
      <if test="distance != null">
        #{distance,jdbcType=DOUBLE},
      </if>
      <if test="cpu != null">
        #{cpu,jdbcType=VARCHAR},
      </if>
      <if test="power != null">
        #{power,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bishe.eq_active.model.Eq_activeExample" resultType="java.lang.Long">
    select count(*) from eq_active
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eq_active
    <set>
      <if test="record.acId != null">
        ac_id = #{record.acId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmrntId != null">
        equipmrnt_id = #{record.equipmrntId,jdbcType=INTEGER},
      </if>
      <if test="record.dayDate != null">
        day_date = #{record.dayDate,jdbcType=DATE},
      </if>
      <if test="record.distance != null">
        distance = #{record.distance,jdbcType=DOUBLE},
      </if>
      <if test="record.cpu != null">
        cpu = #{record.cpu,jdbcType=VARCHAR},
      </if>
      <if test="record.power != null">
        power = #{record.power,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eq_active
    set ac_id = #{record.acId,jdbcType=INTEGER},
      equipmrnt_id = #{record.equipmrntId,jdbcType=INTEGER},
      day_date = #{record.dayDate,jdbcType=DATE},
      distance = #{record.distance,jdbcType=DOUBLE},
      cpu = #{record.cpu,jdbcType=VARCHAR},
      power = #{record.power,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bishe.eq_active.model.Eq_active">
    update eq_active
    <set>
      <if test="equipmrntId != null">
        equipmrnt_id = #{equipmrntId,jdbcType=INTEGER},
      </if>
      <if test="dayDate != null">
        day_date = #{dayDate,jdbcType=DATE},
      </if>
      <if test="distance != null">
        distance = #{distance,jdbcType=DOUBLE},
      </if>
      <if test="cpu != null">
        cpu = #{cpu,jdbcType=VARCHAR},
      </if>
      <if test="power != null">
        power = #{power,jdbcType=VARCHAR},
      </if>
    </set>
    where ac_id = #{acId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bishe.eq_active.model.Eq_active">
    update eq_active
    set equipmrnt_id = #{equipmrntId,jdbcType=INTEGER},
      day_date = #{dayDate,jdbcType=DATE},
      distance = #{distance,jdbcType=DOUBLE},
      cpu = #{cpu,jdbcType=VARCHAR},
      power = #{power,jdbcType=VARCHAR}
    where ac_id = #{acId,jdbcType=INTEGER}
  </update>

  <select id="getEq_activeList" parameterType="com.bishe.eq_active.vo.Eq_activeQuery" resultMap="BaseResultMap"> <!--resultType="User"-->
    select * from eq_active
    <include refid="getEq_activeListWhere"></include>
    order by ac_id asc
    limit #{start},#{limit}
  </select>

  <!--统计员工数据量-->
  <select id="countEq_activeList" parameterType="com.bishe.eq_active.vo.Eq_activeQuery" resultType="Long">
    select count(1) from eq_active
    <include refid="getEq_activeListWhere"></include>
  </select>

  <!--重复片段用sql片段代替，放下面，-->
  <sql id="getEq_activeListWhere">
    <where>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId}
      </if>
      <if test="startDistance != null" >
        /*大于小于号是标签的符号，所以加上CDATA*/
        <![CDATA[
        and  distance >= #{startDistance}
        ]]>
      </if>
      <if test="endDistance != null" >
        /*大于小于号是标签的符号，所以加上CDATA*/
        <![CDATA[
        and distance <= #{endDistance}
        ]]>
      </if>
    </where>
  </sql>
  <!--添加-->
<!--  <insert id="addUser" parameterType="User">-->
<!--    insert into user-->
<!--    (username,password,name,sex,age,birthday,phone,equipment_id,address)-->
<!--    values-->
<!--    (#{username},#{password},#{name},#{sex},#{age},#{birthday},#{phone},#{equipmentId},#{address})-->
<!--  </insert>-->
<!--  &lt;!&ndash;删除&ndash;&gt;-->
<!--  <delete id="deleteUserByIds" parameterType="String">-->
<!--    delete from user where user_id in (${ids})-->
<!--  </delete>-->

<!--  <select id="getUserById" parameterType="Integer" resultType="User">-->
<!--    select * from user where user_id = #{id}-->
<!--  </select>-->
<!--  &lt;!&ndash;修改&ndash;&gt;-->
<!--  <update id="updateUser" parameterType="User">-->
<!--    update user-->
<!--     set username = #{username},-->
<!--      password = #{password},-->
<!--      name = #{name},-->
<!--      sex = #{sex},-->
<!--      age = #{age},-->
<!--      birthday = #{birthday},-->
<!--      phone = #{phone},-->
<!--      address = #{address},-->
<!--      equipment_id = #{equipmentId}-->
<!--      where user_id = #{userId}-->
<!--  </update>-->
<!--  -->
</mapper>