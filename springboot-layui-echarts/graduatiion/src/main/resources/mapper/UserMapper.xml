<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bishe.user.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.bishe.user.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="equipment_id" jdbcType="INTEGER" property="equipmentId" />
    <!--嵌套结果 ，属性名称和类里面的对应，字段对应，映射出来的类型-->
    <association property="equipment" column="equipment_id" javaType="Equipment">
      <id column="equipment_id" property="equipmentName"/>
      <result column="equipment_name" property="equipmentName"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, username, password, name, sex, age, birthday, phone, address, equipment_id
  </sql>
  <select id="selectByExample" parameterType="com.bishe.user.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bishe.user.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bishe.user.model.User">
    insert into user (user_id, username, password, 
      name, sex, age, birthday, 
      phone, address, equipment_id
      )
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{equipmentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bishe.user.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bishe.user.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      equipment_id = #{record.equipmentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bishe.user.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bishe.user.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      equipment_id = #{equipmentId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>


  <!--查询用户列表数据-->
  <!--<select id="getUserList" parameterType="com.bishe.user.vo.UserQuery" resultType="User">
    select * from user
    <include refid="getUserListWhere"></include>
    limit #{start},#{limit}
  </select>-->
  <select id="getUserList" parameterType="com.bishe.user.vo.UserQuery" resultMap="BaseResultMap"> <!--resultType="User"-->
    select * from user a left join equipment b on a.equipment_id = b.equipment_id
    <include refid="getUserListWhere"></include>
    order by user_id desc
    limit #{start},#{limit}
  </select>

  <!--统计员工数据量-->
  <select id="countUserList" parameterType="com.bishe.user.vo.UserQuery" resultType="Long">
    select count(1) from user a
    <include refid="getUserListWhere"></include>
  </select>

  <!--重复片段用sql片段代替，放下面，-->
  <sql id="getUserListWhere">
    <where>
      <if test="name != null">
        a.name like '%' #{name} '%'
      </if>
      <if test="startAge != null" >
        /*大于小于号是标签的符号，所以加上CDATA*/
        <![CDATA[
        and a.age >= #{startAge}
        ]]>
      </if>
      <if test="endAge != null" >
        /*大于小于号是标签的符号，所以加上CDATA*/
        <![CDATA[
        and a.age<= #{endAge}
        ]]>
      </if>
      <!--<if test="startDate != null" >
        /*大于小于号是标签的符号，所以加上CDATA*/
        <![CDATA[
        and birthday >= #{startDate}
        ]]>
      </if>
      <if test="endDate != null" >
        /*大于小于号是标签的符号，所以加上CDATA*/
        <![CDATA[
        and birthday <= #{endDate}
        ]]>
      </if>-->
    </where>
  </sql>
  <!--添加-->
  <insert id="addUser" parameterType="User">
    insert into user
    (username,password,name,sex,age,birthday,phone,equipment_id,address)
    values
    (#{username},#{password},#{name},#{sex},#{age},#{birthday},#{phone},#{equipmentId},#{address})
  </insert>
  <!--删除-->
  <delete id="deleteUserByIds" parameterType="String">
    delete from user where user_id in (${ids})
  </delete>
  
  <select id="getUserById" parameterType="Integer" resultType="User">
    select * from user where user_id = #{id}
  </select>
  <!--修改-->
  <update id="updateUser" parameterType="User">
    update user
     set username = #{username},
      password = #{password},
      name = #{name},
      sex = #{sex},
      age = #{age},
      birthday = #{birthday},
      phone = #{phone},
      address = #{address},
      equipment_id = #{equipmentId}
      where user_id = #{userId}
  </update>

</mapper>